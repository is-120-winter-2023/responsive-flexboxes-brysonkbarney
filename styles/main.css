/*****************************************************/
/* This semester we will be using my variation of    */
/* Josh Comeau's CSS Reset instead of normalize      */
/* Read more at                                      */
/* https://www.joshwcomeau.com/css/custom-css-reset/ */
/*****************************************************/
/* Always add your CSS below the reset CSS           */
/*****************************************************/
:root {
  --color-font: #ffffff;
  --color-primary: #111115; /* black */
  --color-secondary: #66666e; /* gray */
  --color-accent: #e6e6e9; /* light gray */
  --color-accent-light: #dd1c1c; /* red */
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  /* this an experimental line-height; if it breaks, add line-height: 1.5 to body */
  line-height: calc(1em + 0.5rem);
}

body {
  display: flex;
  flex-direction: column;
}

body {
  margin: 0;
  -webkit-font-smoothing: antialiased;
  background-color: black;
  display: flex;
  flex-direction: column;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

input,
button,
textarea,
select {
  font: inherit;
}

header {
  margin-bottom: var(--gap);
}

header ul {
  display: flex;
  justify-content: space-evenly;
  margin: 0;
  padding: 0;
  list-style-type: none;
}
/* until you get a feel for overflow, I'll keep these next two commented out */
/* p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
} */

/* p {
  overflow-wrap: break-word;
  hyphens: auto;
} */

/* temp CSS for HTML only assignments */
.panel {
  display: flex;
  flex-direction: column;
}

.panel .image-wrapper {
  order: -1;
}

picture img {
  width: 100%;
}

svg {
  width: 200px;
}

/* temp fix to size about img */
img[srcset] {
  width: 50%;
  height: auto;
  margin: 2rem auto;
}

/* temporary fix to size svg images */
img[src$="svg"] {
  width: 200px;
}

/************ add your CSS here *****************/
body {
  font-family: "Roboto Condensed", sans-serif;
  font-family: "Ubuntu", sans-serif;
  color: var(--color-font);
}

h1,
h2,
h3,
h4 {
  font-family: "Roboto Condensed", sans-serif;
  font-family: "Ubuntu", sans-serif;
  color: var(--color-font);
  margin-bottom: 0.5em;
  margin-top: 1.5em;
}

a {
  color: var(--color-secondary);
}

a[href]:hover {
  color: var(--color-accent-light);
}

main {
  align-self: center;
  padding: 0 1rem;
  max-width: 50rem;
}

h1 {
  font-size: 3.5rem;
}

h2 {
  font-size: 2.5rem;
}

h3 {
  font-size: 2rem;
}

p {
  margin-bottom: 1.5rem;
}

article,
aside {
  margin-bottom: 6rem;
}

footer {
  padding: 0 1rem;
  background-color: var(--color-secondary);
  display: block;
}
footer p {
  color: var(--color-primary);
  margin: 0;
  padding: 3rem 1rem 6rem;
}

.button {
  display: inline-flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-start;
  position: relative;
  padding: 15px 30px;
  margin: 0 1rem 1rem;
  border: 2px solid #fcfcfc;
  text-decoration: none;
  transition: color 1s cubic-bezier(0.25, 1, 0.25, 1),
    background-color 1s cubic-bezier(0.25, 1, 0.25, 1);
}

.button h2 a {
  color: #fcfbfb;
}

.button span {
  font-size: 14px;
  font-weight: bold;
  color: #ffffff;
  display: inline-block;
  text-transform: uppercase;
  width: 100%;
  text-align: center;
  transition: color 0.5s cubic-bezier(0.19, 1, 0.22, 1);
}

.button:hover span {
  position: relative;
  z-index: 1;
  color: #000000;
}

/* converted an empty <div class="hover"> to a psuedo-element. Original used scale3D(1,0,1) to force the animation on the graphics card */
.button::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: #ffffff;
  transform-origin: top center;
  transform: scaleY(0);
  transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
}

.button:hover::before {
  transform: scaleY(1);
  transform-origin: bottom center;
}

.hero {
  position: relative;
  overflow: hidden;
  height: 90vh;
}

.video-background {
  background: #000;
  position: absolute;
  inset: 0;
  z-index: -99;
}

.video-foreground,
.video-background iframe {
  position: absolute;
  border: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

@media (min-aspect-ratio: 16/9) {
  .video-foreground {
    height: 300%;
    top: -100%;
  }
}
@media (max-aspect-ratio: 16/9) {
  .video-foreground {
    width: 300%;
    left: -100%;
  }
}

/* uncomment this declaration to see the gradient overlay */
/* .hero img {
  visibility: hidden;
} */
.menu-icon {
  background-color: black;
  position: fixed;
  top: 20px;
  left: 20px;
  padding: 1.5rem;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  z-index: 2;
}

.menu-icon line {
  stroke: #fff;
  stroke-width: 3px;
  stroke-linecap: round;
  transform-origin: center;
  transition: transform 300ms ease;
}

.menu-icon line:first-child {
  transform: translateY(16%);
}

.menu-icon line:last-child {
  transform: translateY(-16%);
}

/* JavaScript toggles a "close" class on the <nav> when the menu-icon is clicked */
.close nav {
  display: block;
}

.close line:first-child {
  transform: rotate(135deg);
}

.close line:last-child {
  transform: rotate(-135deg);
}

/* @media (min-width: 600px) {
  .menu-icon {
    display: none;
  } */

a:link {
  text-decoration: none;
}

nav {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 1;
  background-color: #000000;
  padding: 6rem 2rem 0;
}

/* basic <ul> menu setup */
nav ul {
  list-style-type: none;
  padding: 0;
}

nav li:last-child {
  border: none;
}

nav li a {
  display: inline-block;
  padding: 1em;
  font-size: 1.25rem;
  font-weight: 200;
  color: #fff;
}

nav li a:hover {
  text-decoration: underline;
}
/* .hero picture {
  height: 100%;
}

.hero img {
  height: 100%;
  object-fit: cover;
} */

.hero::before {
  content: "";
  position: absolute;
  inset: 0;
  background-image: linear-gradient(
    to bottom,
    rgb(0 0 0 / 0%) 40%,
    rgb(0 0 0 / 60%)
  );
}

.hero .text-wrapper {
  position: absolute;
  color: #fff;
  /* interim positioning until we convert this to flexbox */
  inset: 0;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.hero h1 {
  color: #fff;
  font-size: clamp(2rem, 9vw + 2rem, 9rem);
  font-weight: 600;
  margin-bottom: 0.5rem;
  text-shadow: 1px 1px 2px #000;
  margin-top: 0;
}

.hero p {
  font-size: 1.5rem;
}

/* Cards */
.cards {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin: 5rem;
}

.card {
  flex: 1 1 0;
  position: relative;
  color: #fff;
  font-family: "Ubuntu", sans-serif;
  font-size: 2rem;
  font-weight: 400;
}

.card:hover p {
  color: transparent;
  background-color: rgb(0 0 0 / 0%);
}

.card p {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  inset: 0;
  margin: 0;
  line-height: 1;
  padding: 0 1rem;
  background-color: rgb(0 0 0 / 60%);
  transition: background-color 400ms ease-in-out;
}

.card img {
  border-radius: 50%;
}

.sr-only {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}

/* MEDIA QUERIES */
@media (min-width: 500px) {
  .panel {
    flex-direction: row;
    display: flex;
    gap: 6rem;
  }

  .panel h2 {
    margin: 0;
  }

  .panel .text-wrapper {
    flex: 1 1 40%;
  }

  .panel .image-wrapper {
    order: 0;
    flex: 1 1 60%;
  }

  .panel .left {
    order: -1;
  }

  .cards {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .card {
    flex: 1 1 40%;
  }
}

@media (min-width: 1000px) {
  .cards {
    flex-wrap: nowrap;
  }
}
